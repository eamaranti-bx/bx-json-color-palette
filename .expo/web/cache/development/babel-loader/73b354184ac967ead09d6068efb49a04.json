{"ast":null,"code":"import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AlertDialogBody = function AlertDialogBody(props, ref) {\n  _s();\n\n  var newProps = usePropsResolution('AlertDialogBody', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(ScrollView, null, React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), props.children));\n};\n\n_s(AlertDialogBody, \"a1PsLeWpgsDcBy2bDIs2aPJhflA=\", false, function () {\n  return [usePropsResolution, useHasResponsiveProps];\n});\n\n_c = AlertDialogBody;\nexport default _c2 = memo(_c1 = forwardRef(AlertDialogBody));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"AlertDialogBody\");\n$RefreshReg$(_c1, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\composites\\AlertDialog\\AlertDialogBody.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","AlertDialogBody","props","ref","newProps","createElement","ScrollView","children"],"mappings":"AAEA,OAAOa,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;;;SANSlB,Q,GAAW;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAPD,IAAiB,UAAUE,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAPR,CAAiBS,cAAjBT,CAAgCU,IAAhCV,CAAqCM,MAArCN,EAA6CO,GAA7CP,CAAJ,EAAuD;AAAEE,UAAAA,MAAM,CAACK,GAAD,CAANL,GAAcI,MAAM,CAACC,GAAD,CAApBL;AAA4B;AAAE;AAAE;;AAAC,WAAOA,MAAP;AAAgB,GAA5PH;;AAA8P,SAAOA,QAAQ,CAACY,KAATZ,CAAe,IAAfA,EAAqBK,SAArBL,CAAP;AAAyC;;AAQ7T,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,GAAR,EAAgB;;;AACtC,MAAMC,QAAQ,GAAGL,kBAAkB,CAAC,iBAAD,EAAoBG,KAApB,CAAnC;;AAEA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,SAAoBP,KAAK,CAACU,aAANV,CAAoBW,UAApBX,EAAgC,IAAhCA,EAAmDA,KAAK,CAACU,aAANV,CAAoBG,GAApBH,EAAyBb,QAAQ,CAAC,EAAD,EAAKsB,QAAL,EAAe;AACrHD,IAAAA,GAAG,EAAEA;AADgH,GAAf,CAAjCR,EAEnEO,KAAK,CAACK,QAF6DZ,CAAnDA,CAApB;AAGD,CAVD;;GAAMM,e,EAAe,8B,EAAA,K,EAAA,YAAA;UACFF,kB,EAEbC,qB;;;KAHAC,e;AAYN,eAA4BL,GAAAA,GAAAA,IAAI,CAAeC,GAAAA,GAAAA,UAAU,CAACI,eAAD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { ScrollView } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertDialogBody = (props, ref) => {\n  const newProps = usePropsResolution('AlertDialogBody', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollView, null, /*#__PURE__*/React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), props.children));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(AlertDialogBody));\n//# sourceMappingURL=AlertDialogBody.js.map"]},"metadata":{},"sourceType":"module"}