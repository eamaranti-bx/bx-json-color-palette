{"ast":null,"code":"import React from 'react';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s2, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s2 = _i.next()).done); _n = true) {\n      _arr.push(_s2.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nvar _s = $RefreshSig$(),\n    _s1 = $RefreshSig$();\n\nexport function useControllableProp(prop, state) {\n  _s();\n\n  var ref = React.useRef(prop !== undefined),\n      isControlled = ref.current;\n  var value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value];\n}\n\n_s(useControllableProp, \"I8oJuzgR5ymq/Mz8dhSz2hpXpZE=\");\n\nexport function useControllableState(props) {\n  _s1();\n\n  var valueProp = props.value,\n      defaultValue = props.defaultValue,\n      onChange = props.onChange;\n\n  var ref = _slicedToArray(React.useState(defaultValue), 2),\n      valueState = ref[0],\n      setValue = ref[1];\n\n  var isControlled = valueProp !== undefined;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(function (next) {\n    var nextValue = typeof next === 'function' ? next(value) : next;\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChange && onChange(nextValue);\n  }, [isControlled, onChange, value]);\n  return [value, updateValue];\n}\n\n_s1(useControllableState, \"nbd/gvCsV+vmdAS2ooeJB5lS7II=\");\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useControllableProp.js"],"names":["React","useControllableProp","prop","state","current","isControlled","useRef","undefined","value","useControllableState","props","valueProp","defaultValue","onChange","valueState","setValue","useState","updateValue","useCallback","next","nextValue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAM,SAAUC,mBAAV,CAA8BC,IAA9B,EAAoCC,KAApC,EAA2C;;;AAC/C,MAEIH,GAAgC,GAAhCA,KAAK,CAACM,MAANN,CAAaE,IAAI,KAAKK,SAAtBP,CAFJ;AAAA,MACWK,YAAY,GACnBL,GAAgC,CADlCI,OADF;AAGA,MAAMI,KAAK,GAAGH,YAAY,IAAI,OAAOH,IAAP,KAAgB,WAAhCG,GAA8CH,IAA9CG,GAAqDF,KAAnE;AACA,SAAO,CAACE,YAAD,EAAeG,KAAf,CAAP;AACD;;GANeP,mB,EAAmB,8B;;AAYnC,OAAM,SAAUQ,oBAAV,CAA+BC,KAA/B,EAAsC;;;AAC1C,MACSC,SAAS,GAGdD,KAAK,CAHPF,KADF;AAAA,MAEEI,YAAY,GAEVF,KAAK,CAFPE,YAFF;AAAA,MAGEC,QAAQ,GACNH,KAAK,CADPG,QAHF;;AAKA,MAA+Bb,GAA4B,GAAA,cAAA,CAA5BA,KAAK,CAACgB,QAANhB,CAAeY,YAAfZ,CAA4B,EAAD,CAAC,CAA3D;AAAA,MAAOc,UAAU,GAAcd,GAA4B,CAAA,CAAA,CAA3D;AAAA,MAAmBe,QAAQ,GAAIf,GAA4B,CAAA,CAAA,CAA3D;;AACA,MAAMK,YAAY,GAAGM,SAAS,KAAKJ,SAAnC;AACA,MAAMC,KAAK,GAAGH,YAAY,GAAGM,SAAH,GAAeG,UAAzC;AACA,MAAMG,WAAW,GAAGjB,KAAK,CAACkB,WAANlB,CAAkBmB,UAAAA,IAAAA,EAAQ;AAC5C,QAAMC,SAAS,GAAG,OAAOD,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACX,KAAD,CAAjC,GAA2CW,IAA7D;;AAEA,QAAE,CAAGd,YAAL,EAAmB;AACjBU,MAAAA,QAAQ,CAACK,SAAD,CAARL;AACD;;AAEDF,IAAAA,QAAQ,IAAIA,QAAQ,CAACO,SAAD,CAApBP;AACD,GARmBb,EAQjB,CAACK,YAAD,EAAeQ,QAAf,EAAyBL,KAAzB,CARiBR,CAApB;AASA,SAAO,CAACQ,KAAD,EAAQS,WAAR,CAAP;AAEF;;IApBgBR,oB,EAAoB,8B","sourcesContent":["import React from 'react';\nexport function useControllableProp(prop, state) {\n  const {\n    current: isControlled\n  } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value];\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange\n  } = props;\n  const [valueState, setValue] = React.useState(defaultValue);\n  const isControlled = valueProp !== undefined;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = React.useCallback(next => {\n    const nextValue = typeof next === 'function' ? next(value) : next;\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChange && onChange(nextValue);\n  }, [isControlled, onChange, value]);\n  return [value, updateValue];\n}\n//# sourceMappingURL=useControllableProp.js.map"]},"metadata":{},"sourceType":"module"}