{"ast":null,"code":"import useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport isNil from 'lodash.isnil';\n\nvar _s = $RefreshSig$();\n\nexport function useMediaQuery(query) {\n  _s();\n\n  var dims = useWindowDimensions();\n  var height = dims === null || dims === void 0 ? void 0 : dims.height;\n  var width = dims === null || dims === void 0 ? void 0 : dims.width;\n  return iterateQuery(query, height, width);\n}\n\n_s(useMediaQuery, \"ax6eq7Nsnu+l8S4NxKFaIwAfD7s=\", false, function () {\n  return [useWindowDimensions];\n});\n\nfunction queryResolver(query, width, height) {\n  for (var queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction iterateQuery(query, height, width) {\n  var queryResults = [];\n\n  if (Array.isArray(query)) {\n    query.forEach(function (subQuery) {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n\n  return queryResults;\n}\n\nfunction calculateQuery(key, val, height, width) {\n  var retval;\n\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return retval;\n}\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useMediaQuery.js"],"names":["isNil","useMediaQuery","query","dims","useWindowDimensions","height","width","iterateQuery","queryResolver","queryKey","calculateQuery","queryResults","Array","isArray","forEach","subQuery","push","key","val","retval","undefined"],"mappings":";AACA,OAAOA,KAAP,MAAkB,cAAlB;;;;AACA,OAAM,SAAUC,aAAV,CAAwBC,KAAxB,EAA+B;;;AACnC,MAAMC,IAAI,GAAGC,mBAAmB,EAAhC;AACA,MAAMC,MAAM,GAAGF,IAAI,KAAK,IAATA,IAAiBA,IAAI,KAAK,KAAK,CAA/BA,GAAmC,KAAK,CAAxCA,GAA4CA,IAAI,CAACE,MAAhE;AACA,MAAMC,KAAK,GAAGH,IAAI,KAAK,IAATA,IAAiBA,IAAI,KAAK,KAAK,CAA/BA,GAAmC,KAAK,CAAxCA,GAA4CA,IAAI,CAACG,KAA/D;AACA,SAAOC,YAAY,CAACL,KAAD,EAAQG,MAAR,EAAgBC,KAAhB,CAAnB;AACD;;GALeL,a,EAAa,8B,EAAA,K,EAAA,YAAA;UACdG,mB;;;SAMNI,a,CAAcN,K,EAAOI,K,EAAOD,M,EAAQ;AAC3C,OAAK,IAAMI,QAAX,IAAuBP,KAAvB,EAA8B;AAC5B,QAAE,CAAGQ,cAAc,CAACD,QAAD,EAAWP,KAAK,CAACO,QAAD,CAAhB,EAA4BJ,MAA5B,EAAoCC,KAApC,CAAnB,EAA+D;AAC7D,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;SAEQC,Y,CAAaL,K,EAAOG,M,EAAQC,K,EAAO;AAC1C,MAAMK,YAAY,GAAG,EAArB;;AAEA,MAAIC,KAAK,CAACC,OAAND,CAAcV,KAAdU,CAAJ,EAA0B;AACxBV,IAAAA,KAAK,CAACY,OAANZ,CAAca,UAAAA,QAAAA,EAAY;AACxBJ,MAAAA,YAAY,CAACK,IAAbL,CAAkBH,aAAa,CAACO,QAAD,EAAWT,KAAX,EAAkBD,MAAlB,CAA/BM;AACD,KAFDT;AAGD,GAJD,MAIO;AACLS,IAAAA,YAAY,CAACK,IAAbL,CAAkBH,aAAa,CAACN,KAAD,EAAQI,KAAR,EAAeD,MAAf,CAA/BM;AACD;;AAED,SAAOA,YAAP;AACD;;SAEQD,c,CAAeO,G,EAAKC,G,EAAKb,M,EAAQC,K,EAAO;AAC/C,MAAIa,MAAJ;;AAEA,MAAInB,KAAK,CAACM,KAAD,CAALN,IAAgBA,KAAK,CAACK,MAAD,CAArBL,IAAiCA,KAAK,CAACkB,GAAD,CAA1C,EAAiD;AAC/C;AACD;;AAED,UAAQD,GAAR;AACE,SAAK,UAAL;AACEE,MAAAA,MAAM,GAAA,CAAInB,KAAK,CAACkB,GAAD,CAAT,GAAiBZ,KAAK,IAAIY,GAA1B,GAAgCE,SAAtCD;AACA;;AAEF,SAAK,UAAL;AACEA,MAAAA,MAAM,GAAA,CAAInB,KAAK,CAACkB,GAAD,CAAT,GAAiBZ,KAAK,IAAIY,GAA1B,GAAgCE,SAAtCD;AACA;;AAEF,SAAK,WAAL;AACEA,MAAAA,MAAM,GAAA,CAAInB,KAAK,CAACkB,GAAD,CAAT,GAAiBb,MAAM,IAAIa,GAA3B,GAAiCE,SAAvCD;AACA;;AAEF,SAAK,WAAL;AACEA,MAAAA,MAAM,GAAA,CAAInB,KAAK,CAACkB,GAAD,CAAT,GAAiBb,MAAM,IAAIa,GAA3B,GAAiCE,SAAvCD;AACA;;AAEF,SAAK,aAAL;AACE,UAAE,CAAGnB,KAAK,CAACkB,GAAD,CAAV,EAAiB;AACf,YAAIZ,KAAK,GAAGD,MAAZ,EAAoB;AAClBc,UAAAA,MAAM,GAAGD,GAAG,KAAK,WAAjBC;AACD,SAFD,MAEO;AACLA,UAAAA,MAAM,GAAGD,GAAG,KAAK,UAAjBC;AACD;AACF;;AAED;;;AAGA;AA7BJ;;AAgCA,SAAOA,MAAP;AAEF","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash.isnil';\nexport function useMediaQuery(query) {\n  const dims = useWindowDimensions();\n  const height = dims === null || dims === void 0 ? void 0 : dims.height;\n  const width = dims === null || dims === void 0 ? void 0 : dims.width;\n  return iterateQuery(query, height, width);\n}\n\nfunction queryResolver(query, width, height) {\n  for (const queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction iterateQuery(query, height, width) {\n  const queryResults = [];\n\n  if (Array.isArray(query)) {\n    query.forEach(subQuery => {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n\n  return queryResults;\n}\n\nfunction calculateQuery(key, val, height, width) {\n  let retval;\n\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return retval;\n}\n//# sourceMappingURL=useMediaQuery.js.map"]},"metadata":{},"sourceType":"module"}