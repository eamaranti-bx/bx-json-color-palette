{"ast":null,"code":"import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s2, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s2 = _i.next()).done); _n = true) {\n      _arr.push(_s2.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nvar _s = $RefreshSig$(),\n    _s1 = $RefreshSig$();\n\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = _toConsumableArray(MARGIN_MAP.mx).concat(_toConsumableArray(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = _toConsumableArray(PADDING_MAP.px).concat(_toConsumableArray(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _objectSpread({}, PADDING_MAP, MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _objectSpread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  _s();\n\n  var _config$componentThem;\n\n  var theme = useNativeBase().theme;\n  var componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (\"development\" === 'development' && incomingProps.debug) {\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  var resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config);\n\n  if (\"development\" === 'development' && incomingProps.debug) {\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\n\n_s(usePropsResolution, \"yadbs+yKaedpMDUtamJzmyhIvJU=\", false, function () {\n  return [useNativeBase, usePropsResolutionWithComponentTheme];\n});\n\nexport var usePropsResolutionWithComponentTheme = function usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config) {\n  _s1();\n\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  var modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  var ref = _slicedToArray(extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])), 2),\n      ignoredProps = ref[0],\n      cleanIncomingProps = ref[1];\n\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat(_toConsumableArray((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n  var theme = useNativeBase().theme;\n  var colorModeProps = useColorMode();\n  var incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps);\n\n  if (\"development\" === 'development' && cleanIncomingProps.debug) {\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  }\n\n  var ref1 = _slicedToArray(propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {},\n    cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n  }, 2), 2),\n      flattenProps = ref1[0],\n      specificityMap = ref1[1];\n\n  var responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    resolveResponsively.map(function (propsName) {\n      if (flattenProps[propsName]) {\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    var propName = 'direction';\n\n    if (flattenProps[propName]) {\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  var responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = _objectSpread({}, flattenProps, responsivelyResolvedProps);\n  var componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle(_objectSpread({\n      theme: theme\n    }, flattenProps, colorModeProps));\n\n    if (\"development\" === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var ref2;\n    ref2 = _slicedToArray(propsFlattener({\n      props: \"development\" === 'development' && cleanIncomingProps.debug ? _objectSpread({}, componentBaseStyle, {\n        debug: true\n      }) : componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1), 2), flattenBaseStyle = ref2[0], baseSpecificityMap = ref2[1], ref2;\n  }\n\n  var variant = flattenProps.variant;\n  var componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap;\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant](_objectSpread({\n      theme: theme\n    }, flattenProps, colorModeProps));\n\n    if (\"development\" === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var ref3;\n    ref3 = _slicedToArray(propsFlattener({\n      props: \"development\" === 'development' && cleanIncomingProps.debug ? _objectSpread({}, componentVariantProps, {\n        debug: true\n      }) : componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1), 2), flattenVariantStyle = ref3[0], variantSpecificityMap = ref3[1], ref3;\n    flattenProps.variant = undefined;\n  }\n\n  var size = flattenProps.size;\n  var componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap;\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size];\n    } else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size](_objectSpread({\n        theme: theme\n      }, flattenProps, colorModeProps));\n    } else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    if (\"development\" === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var ref4;\n    ref4 = _slicedToArray(propsFlattener({\n      props: \"development\" === 'development' && cleanIncomingProps.debug ? _objectSpread({}, componentSizeProps, {\n        debug: true\n      }) : componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1), 2), flattenSizeStyle = ref4[0], sizeSpecificityMap = ref4[1], ref4;\n  }\n\n  var defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (var prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_objectSpread({}, defaultStyles, flattenProps), defaultSpecificity);\n  var ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    var bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(function (color) {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n\n  var ref5 = _slicedToArray(extractInObject(flattenProps, ignore), 1),\n      gradientProps = ref5[0];\n\n  var disableContrastText = useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText;\n  var bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  var contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color, disableCSSMediaQueries ? disableContrastText ? true : false : true);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? _objectSpread({\n    color: contrastTextColor\n  }, flattenProps._text) : flattenProps._text;\n  var resolvedProps = omitUndefined(_objectSpread({}, flattenProps, ignoredProps, gradientProps));\n  return resolvedProps;\n};\n\n_s1(usePropsResolutionWithComponentTheme, \"ffl3tnxu5YkB2XNhaa8XKC3JgRs=\", false, function () {\n  return [useResponsiveSSRProps, useNativeBase, useColorMode, useBreakpointResolvedProps, useNativeBaseConfig, useContrastText];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useThemeProps\\usePropsResolution.js"],"names":["get","merge","useNativeBase","useColorMode","omitUndefined","extractInObject","useContrastText","useBreakpointResolvedProps","propsFlattener","compareSpecificity","useResponsiveSSRProps","React","ResponsiveQueryContext","useNativeBaseConfig","SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","margin","m","marginTop","marginBottom","marginLeft","marginRight","PADDING_MAP","px","py","pt","pb","pr","pl","padding","p","paddingTop","paddingBottom","paddingLeft","paddingRight","SPREAD_PROP_SPECIFICITY_MAP","propsSpreader","incomingProps","incomingSpecifity","flattenedDefaultProps","specificity","forEach","prop","val","includes","newProp","usePropsResolution","component","state","config","_config$componentThem","theme","componentTheme","concat","debug","console","log","resolvedProps","usePropsResolutionWithComponentTheme","_flattenProps$bg","_flattenProps$backgro","_flattenProps$bgColor","_flattenProps$backgro2","_ref","_flattenProps$bg2","_flattenProps","_flattenProps$_text","_flattenProps2","_flattenProps2$_text","modifiedPropsForSSR","ignoredProps","cleanIncomingProps","ignoreProps","responsiveQueryContext","useContext","disableCSSMediaQueries","resolveResponsively","colorModeProps","incomingWithDefaultProps","defaultProps","flattenProps","specificityMap","props","platform","Platform","OS","colormode","colorMode","previouslyFlattenProps","cascadePseudoProps","responsiveProps","map","propsName","propName","responsivelyResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","baseStyle","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","variants","undefined","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","sizes","defaultStyles","defaultSpecificity","ignore","bg","linearGradient","background","bgColor","backgroundColor","_flattenProps$backgro3","_flattenProps$bgColor2","_flattenProps$backgro4","bgProp","colors","color","gradientProps","disableContrastText","contrastTextColor","_text"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  var _config$componentThem;\n\n  const {\n    theme\n  } = useNativeBase();\n  const componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    /* eslint-disable-next-line */\n\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config);\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\nexport const usePropsResolutionWithComponentTheme = (componentTheme, incomingProps, state, config) => {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n  const [ignoredProps, cleanIncomingProps] = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = useNativeBase();\n  const colorModeProps = useColorMode(); // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 2: flatten them\n\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  }\n\n  let [flattenProps, specificityMap] = propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {},\n    cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n  }, 2); // console.log(resolveResponsively);\n  // Not work for SSR\n\n  const responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map(propsName => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentBaseStyle,\n        debug: true\n      } : componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n  } // NOTE: Resolving variants\n\n\n  const variant = flattenProps.variant;\n  let componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap; // Extracting props from variant\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : //@ts-ignore\n    componentTheme.variants[variant]({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentVariantProps,\n        debug: true\n      } : componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  const size = flattenProps.size;\n  let componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap; // Extracting props from size\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size]; //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    } // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n        flattenProps.size = undefined; //@ts-ignore\n\n        componentSizeProps = componentTheme.sizes[size]({\n          theme,\n          ...flattenProps,\n          ...colorModeProps\n        });\n      } // Type - sizes: {lg: {px: 1}}. Refer button theme\n      else {\n          flattenProps.size = undefined;\n          componentSizeProps = componentTheme.sizes[size];\n        }\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentSizeProps,\n        debug: true\n      } : componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n  } // // STEP 4: merge\n\n\n  const defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity); // // STEP 5: linear Grad and contrastText\n\n  let ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    let bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(color => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  } // // NOTE: seprating bg props when linearGardiant is available\n\n\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n  const disableContrastText = useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText;\n  const bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  const contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color, disableCSSMediaQueries ? disableContrastText ? true : false : true);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? {\n    color: contrastTextColor,\n    ...flattenProps._text\n  } : flattenProps._text;\n  const resolvedProps = omitUndefined({ ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps\n  }); // STEP 6: Return\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n};\n//# sourceMappingURL=usePropsResolution.js.map"]},"metadata":{},"sourceType":"module"}