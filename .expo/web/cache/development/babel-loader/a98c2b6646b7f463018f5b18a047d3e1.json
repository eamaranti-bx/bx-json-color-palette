{"ast":null,"code":"import React from 'react';\nexport var AlertDialogContext = React.createContext({\n  handleClose: function handleClose() {},\n  contentSize: {},\n  initialFocusRef: {\n    current: null\n  },\n  finalFocusRef: {\n    current: null\n  }\n});\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\composites\\AlertDialog\\Context.js"],"names":["React","AlertDialogContext","createContext","handleClose","contentSize","initialFocusRef","current","finalFocusRef"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,kBAAkB,GAAgBD,KAAK,CAACE,aAANF,CAAoB;AACjEG,EAAAA,WAAW,EAAE,uBAAM,CAAE,CAD4C;AAEjEC,EAAAA,WAAW,EAAE,EAFoD;AAGjEC,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE;AADM,GAHgD;AAMjEC,EAAAA,aAAa,EAAE;AACbD,IAAAA,OAAO,EAAE;AADI;AANkD,CAApBN,CAAxC","sourcesContent":["import React from 'react';\nexport const AlertDialogContext = /*#__PURE__*/React.createContext({\n  handleClose: () => {},\n  contentSize: {},\n  initialFocusRef: {\n    current: null\n  },\n  finalFocusRef: {\n    current: null\n  }\n});\n//# sourceMappingURL=Context.js.map"]},"metadata":{},"sourceType":"module"}