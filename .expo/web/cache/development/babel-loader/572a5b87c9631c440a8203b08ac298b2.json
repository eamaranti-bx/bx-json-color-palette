{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport get from 'lodash.get';\nimport { resolveValueWithBreakpoint } from '../hooks/useThemeProps/utils';\nimport { hasValidBreakpointFormat, transparentize } from './tools';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nvar isNumber = function isNumber(n) {\n  return typeof n === 'number' && !isNaN(n);\n};\n\nexport var getColor = function getColor(rawValue, scale, theme) {\n  var alphaMatched = typeof rawValue === 'string' ? rawValue === null || rawValue === void 0 ? void 0 : rawValue.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    var colorMatched = rawValue === null || rawValue === void 0 ? void 0 : rawValue.match(/^.*?(?=:alpha)/);\n    var color1 = colorMatched ? colorMatched[0] : colorMatched;\n    var alphaValue = alphaMatched[0].split('.')[1];\n    var alphaFromToken = get(theme.opacity, alphaValue, alphaValue);\n    var alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    var newColor = transparentize(color1, alpha)(theme);\n    return newColor;\n  } else {\n    return get(scale, rawValue, rawValue);\n  }\n};\n\nvar getMargin = function getMargin(n, scale) {\n  n = convertStringNumberToNumber('margin', n);\n\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  var isNegative = n < 0;\n  var absolute = Math.abs(n);\n  var value = get(scale, absolute, absolute);\n\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n\n  return value * (isNegative ? -1 : 1);\n};\n\nexport var layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  textAlign: true\n};\nexport var flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection'\n  },\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true\n};\nexport var position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex'\n  },\n  top: {\n    property: 'top',\n    scale: 'space'\n  },\n  right: {\n    property: 'right',\n    scale: 'space'\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space'\n  },\n  left: {\n    property: 'left',\n    scale: 'space'\n  }\n};\nexport var color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor\n  },\n  tintColor: {\n    property: 'tintColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity'\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  textDecorationColor: {\n    property: 'textDecorationColor',\n    scale: 'colors',\n    transformer: getColor\n  }\n};\nexport var border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths'\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles'\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders'\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders'\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders'\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders'\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders'\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders'\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths'\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles'\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths'\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles'\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths'\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles'\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths'\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles'\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  }\n};\nexport var background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage'\n  },\n  bgImg: {\n    property: 'backgroundImage'\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode'\n  },\n  bgSize: {\n    property: 'backgroundSize'\n  },\n  bgPosition: {\n    property: 'backgroundPosition'\n  },\n  bgPos: {\n    property: 'backgroundPosition'\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat'\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment'\n  }\n};\nexport var space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  padding: {\n    property: 'padding',\n    scale: 'space'\n  },\n  p: {\n    property: 'padding',\n    scale: 'space'\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  },\n  gap: {\n    property: 'gap',\n    scale: 'space'\n  }\n};\nexport var typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts'\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes'\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: function transformer(val, scale) {\n      return val ? get(scale, val, val).toString() : val;\n    }\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights'\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings'\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: {\n    property: 'textDecorationLine'\n  },\n  txtDecor: {\n    property: 'textDecorationLine'\n  },\n  textDecorationLine: true\n};\nvar extraProps = {\n  outline: true,\n  outlineWidth: true,\n  shadow: {\n    scale: 'shadows'\n  },\n  cursor: true,\n  overflow: true\n};\nexport var propConfig = _objectSpread({}, color, space, layout, flexbox, border, position, typography, background, extraProps);\n\nvar convertStringNumberToNumber = function convertStringNumberToNumber(key, value) {\n  if (typeof value === 'string' && key !== 'fontWeight' && value && !isNaN(Number(value))) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nvar getRNKeyAndStyleValue = function getRNKeyAndStyleValue(param) {\n  var config = param.config,\n      value = param.value,\n      key = param.key,\n      theme = param.theme,\n      styledSystemProps = param.styledSystemProps,\n      currentBreakpoint = param.currentBreakpoint;\n  var style = {};\n\n  if (config === true) {\n    style = _objectSpread({}, style, _defineProperty({}, key, convertStringNumberToNumber(key, value)));\n  } else if (config) {\n    var property1 = config.property,\n        scale = config.scale,\n        properties = config.properties,\n        transformer = config.transformer;\n    var val = value;\n\n    if (transformer) {\n      val = transformer(val, theme[scale], theme, styledSystemProps.fontSize);\n    } else {\n      val = get(theme[scale], value, value);\n    }\n\n    if (typeof val === 'string') {\n      if (val.endsWith('px')) {\n        val = parseFloat(val);\n      } else if (val.endsWith('em') && Platform.OS !== 'web') {\n        var fontSize = resolveValueWithBreakpoint(styledSystemProps.fontSize, theme.breakpoints, currentBreakpoint, key);\n        val = parseFloat(val) * parseFloat(get(theme.fontSizes, fontSize, fontSize));\n      }\n    }\n\n    val = convertStringNumberToNumber(key, val);\n\n    if (properties) {\n      properties.forEach(function (property) {\n        style = _objectSpread({}, style, _defineProperty({}, property, val));\n      });\n    } else if (property1) {\n      style = _objectSpread({}, style, _defineProperty({}, property1, val));\n    } else {\n      style = _objectSpread({}, style, val);\n    }\n  }\n\n  return style;\n};\n\nexport var getStyleAndFilteredProps = function getStyleAndFilteredProps(param) {\n  var _loop = function _loop(key1) {\n    var rawValue = styledSystemProps[key1];\n    var config = propConfig[key1];\n\n    if (hasValidBreakpointFormat(rawValue, theme.breakpoints)) {\n      if (!responsiveStyles) responsiveStyles = {};\n      var value = rawValue;\n\n      if (Array.isArray(value)) {\n        value.forEach(function (v, i) {\n          if (!responsiveStyles[orderedBreakPoints[i][0]]) {\n            responsiveStyles[orderedBreakPoints[i][0]] = [];\n          }\n\n          var newStyle = getRNKeyAndStyleValue({\n            config: config,\n            value: v,\n            key: key1,\n            styledSystemProps: styledSystemProps,\n            theme: theme,\n            currentBreakpoint: currentBreakpoint\n          });\n          responsiveStyles[orderedBreakPoints[i][0]].push(newStyle);\n        });\n      } else {\n        for (var k in value) {\n          var newStyle2 = getRNKeyAndStyleValue({\n            config: config,\n            value: value[k],\n            key: key1,\n            styledSystemProps: styledSystemProps,\n            theme: theme,\n            currentBreakpoint: currentBreakpoint\n          });\n\n          if (!responsiveStyles[k]) {\n            responsiveStyles[k] = [];\n          }\n\n          responsiveStyles[k].push(newStyle2);\n        }\n      }\n    } else {\n      var value1 = rawValue;\n      var newStyle1 = getRNKeyAndStyleValue({\n        config: config,\n        value: value1,\n        key: key1,\n        styledSystemProps: styledSystemProps,\n        theme: theme,\n        currentBreakpoint: currentBreakpoint\n      });\n      styleFromProps = _objectSpread({}, styleFromProps, newStyle1);\n    }\n  };\n\n  var style = param.style,\n      theme = param.theme,\n      debug = param.debug,\n      currentBreakpoint = param.currentBreakpoint,\n      getResponsiveStyles = param.getResponsiveStyles,\n      styledSystemProps = param.styledSystemProps;\n  var styleFromProps = {};\n  var dataSet = {};\n  var responsiveStyles = null;\n  var orderedBreakPoints = Object.entries(theme.breakpoints).sort(function (a, b) {\n    return a[1] - b[1];\n  });\n\n  for (var key1 in styledSystemProps) {\n    _loop(key1);\n  }\n\n  if (responsiveStyles) {\n    var query = {\n      query: []\n    };\n    orderedBreakPoints.forEach(function (o) {\n      var key = o[0];\n\n      if (key === 'base') {\n        if (responsiveStyles) query.initial = responsiveStyles.base;\n      } else {\n        if (responsiveStyles) {\n          if (key in responsiveStyles) {\n            var _query$query;\n\n            query === null || query === void 0 ? void 0 : (_query$query = query.query) === null || _query$query === void 0 ? void 0 : _query$query.push({\n              minWidth: o[1],\n              style: responsiveStyles[key]\n            });\n          }\n        }\n      }\n    });\n    var ref = getResponsiveStyles(query),\n        newDataSet = ref.dataSet,\n        styles = ref.styles;\n    dataSet = _objectSpread({}, dataSet, newDataSet);\n    styleFromProps = _objectSpread({}, styleFromProps, StyleSheet.flatten(styles));\n  }\n\n  if (\"development\" === 'development' && debug) {\n    console.log('style ', debug + ' :: ', {\n      styleFromProps: styleFromProps,\n      style: style,\n      styledSystemProps: styledSystemProps\n    });\n  }\n\n  return {\n    styleSheet: StyleSheet.create({\n      box: styleFromProps\n    }),\n    dataSet: dataSet\n  };\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\theme\\styled-system.js"],"names":["get","resolveValueWithBreakpoint","hasValidBreakpointFormat","transparentize","isNumber","n","isNaN","getColor","rawValue","scale","theme","alphaMatched","match","colorMatched","color","alphaValue","split","alphaFromToken","opacity","alpha","parseFloat","newColor","getMargin","convertStringNumberToNumber","isNegative","absolute","Math","abs","value","layout","width","property","w","height","h","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","size","properties","boxSize","overflow","overflowX","overflowY","display","verticalAlign","textAlign","flexbox","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flexDir","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","position","zIndex","top","right","bottom","left","transformer","tintColor","backgroundColor","bg","bgColor","background","textDecorationColor","border","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderTopRadius","borderLeftRadius","borderRightRadius","borderTopLeftRadius","borderTopRightRadius","borderRight","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderX","borderY","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","rounded","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","roundedTop","borderBottomRadius","roundedBottom","roundedLeft","roundedRight","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","bgImage","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","space","margin","m","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","marginX","mx","marginY","my","padding","p","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","paddingX","px","paddingY","py","gap","typography","fontFamily","fontSize","fontWeight","val","toString","lineHeight","letterSpacing","fontStyle","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","textDecoration","txtDecor","textDecorationLine","extraProps","outline","outlineWidth","shadow","cursor","propConfig","key","Number","getRNKeyAndStyleValue","config","styledSystemProps","currentBreakpoint","style","endsWith","Platform","OS","breakpoints","fontSizes","forEach","getStyleAndFilteredProps","debug","getResponsiveStyles","styleFromProps","dataSet","responsiveStyles","orderedBreakPoints","Object","entries","sort","a","b","Array","isArray","v","i","newStyle","push","k","query","o","initial","base","_query$query","newDataSet","styles","StyleSheet","flatten","console","log","styleSheet","create","box"],"mappings":"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","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport get from 'lodash.get';\nimport { resolveValueWithBreakpoint } from '../hooks/useThemeProps/utils';\nimport { hasValidBreakpointFormat, transparentize } from './tools';\n\nconst isNumber = n => typeof n === 'number' && !isNaN(n);\n\nexport const getColor = (rawValue, scale, theme) => {\n  const alphaMatched = typeof rawValue === 'string' ? rawValue === null || rawValue === void 0 ? void 0 : rawValue.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    const colorMatched = rawValue === null || rawValue === void 0 ? void 0 : rawValue.match(/^.*?(?=:alpha)/);\n    const color = colorMatched ? colorMatched[0] : colorMatched;\n    const alphaValue = alphaMatched[0].split('.')[1];\n    const alphaFromToken = get(theme.opacity, alphaValue, alphaValue);\n    const alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    const newColor = transparentize(color, alpha)(theme);\n    return newColor;\n  } else {\n    return get(scale, rawValue, rawValue);\n  }\n}; // To handle negative margins\n\nconst getMargin = (n, scale) => {\n  n = convertStringNumberToNumber('margin', n);\n\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  const isNegative = n < 0;\n  const absolute = Math.abs(n);\n  const value = get(scale, absolute, absolute);\n\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n\n  return value * (isNegative ? -1 : 1);\n};\n\nexport const layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  textAlign: true\n};\nexport const flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection'\n  },\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true\n};\nexport const position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex'\n  },\n  top: {\n    property: 'top',\n    scale: 'space'\n  },\n  right: {\n    property: 'right',\n    scale: 'space'\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space'\n  },\n  left: {\n    property: 'left',\n    scale: 'space'\n  }\n};\nexport const color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor\n  },\n  tintColor: {\n    property: 'tintColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity'\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  textDecorationColor: {\n    property: 'textDecorationColor',\n    scale: 'colors',\n    transformer: getColor\n  }\n};\nexport const border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths'\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles'\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders'\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders'\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders'\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders'\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders'\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders'\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths'\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles'\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths'\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles'\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths'\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles'\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths'\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles'\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  }\n};\nexport const background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage'\n  },\n  bgImg: {\n    property: 'backgroundImage'\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode'\n  },\n  bgSize: {\n    property: 'backgroundSize'\n  },\n  bgPosition: {\n    property: 'backgroundPosition'\n  },\n  bgPos: {\n    property: 'backgroundPosition'\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat'\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment'\n  }\n};\nexport const space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  padding: {\n    property: 'padding',\n    scale: 'space'\n  },\n  p: {\n    property: 'padding',\n    scale: 'space'\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  },\n  gap: {\n    property: 'gap',\n    scale: 'space'\n  }\n};\nexport const typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts'\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes'\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: (val, scale) => {\n      return val ? get(scale, val, val).toString() : val;\n    }\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights'\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings'\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: {\n    property: 'textDecorationLine'\n  },\n  txtDecor: {\n    property: 'textDecorationLine'\n  },\n  textDecorationLine: true\n};\nconst extraProps = {\n  outline: true,\n  outlineWidth: true,\n  shadow: {\n    scale: 'shadows'\n  },\n  cursor: true,\n  overflow: true\n};\nexport const propConfig = { ...color,\n  ...space,\n  ...layout,\n  ...flexbox,\n  ...border,\n  ...position,\n  ...typography,\n  ...background,\n  ...extraProps\n}; // For backward compatibility with 3.0 of props like non token string numbers `<Box mt={\"39\"} />` => used to get applied as 39px. RN expects fontWeight to be string and crashes with numbers\n// https://reactnative.dev/docs/text-style-props#fontweight\n\nconst convertStringNumberToNumber = (key, value) => {\n  if (typeof value === 'string' && key !== 'fontWeight' && value && !isNaN(Number(value))) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nconst getRNKeyAndStyleValue = ({\n  config,\n  value,\n  key,\n  theme,\n  styledSystemProps,\n  currentBreakpoint\n}) => {\n  let style = {};\n\n  if (config === true) {\n    style = { ...style,\n      [key]: convertStringNumberToNumber(key, value)\n    };\n  } else if (config) {\n    //@ts-ignore\n    const {\n      property,\n      scale,\n      properties,\n      transformer\n    } = config;\n    let val = value;\n\n    if (transformer) {\n      val = transformer(val, theme[scale], theme, styledSystemProps.fontSize);\n    } else {\n      // If a token is not found in the theme\n      val = get(theme[scale], value, value);\n    }\n\n    if (typeof val === 'string') {\n      if (val.endsWith('px')) {\n        val = parseFloat(val);\n      } else if (val.endsWith('em') && Platform.OS !== 'web') {\n        const fontSize = resolveValueWithBreakpoint(styledSystemProps.fontSize, theme.breakpoints, currentBreakpoint, key);\n        val = parseFloat(val) * parseFloat(get(theme.fontSizes, fontSize, fontSize));\n      }\n    }\n\n    val = convertStringNumberToNumber(key, val);\n\n    if (properties) {\n      //@ts-ignore\n      properties.forEach(property => {\n        style = { ...style,\n          [property]: val\n        };\n      });\n    } else if (property) {\n      style = { ...style,\n        [property]: val\n      };\n    } else {\n      style = { ...style,\n        ...val\n      };\n    }\n  }\n\n  return style;\n};\n\nexport const getStyleAndFilteredProps = ({\n  style,\n  theme,\n  debug,\n  currentBreakpoint,\n  getResponsiveStyles,\n  styledSystemProps\n}) => {\n  let styleFromProps = {};\n  let dataSet = {};\n  let responsiveStyles = null;\n  const orderedBreakPoints = Object.entries(theme.breakpoints).sort((a, b) => a[1] - b[1]);\n\n  for (const key in styledSystemProps) {\n    const rawValue = styledSystemProps[key];\n    const config = propConfig[key];\n\n    if (hasValidBreakpointFormat(rawValue, theme.breakpoints)) {\n      if (!responsiveStyles) responsiveStyles = {};\n      const value = rawValue;\n\n      if (Array.isArray(value)) {\n        value.forEach((v, i) => {\n          //@ts-ignore\n          if (!responsiveStyles[orderedBreakPoints[i][0]]) {\n            //@ts-ignore\n            responsiveStyles[orderedBreakPoints[i][0]] = [];\n          }\n\n          const newStyle = getRNKeyAndStyleValue({\n            config,\n            value: v,\n            key,\n            styledSystemProps,\n            theme,\n            currentBreakpoint\n          }); //@ts-ignore\n\n          responsiveStyles[orderedBreakPoints[i][0]].push(newStyle);\n        });\n      } else {\n        for (const k in value) {\n          const newStyle = getRNKeyAndStyleValue({\n            config,\n            value: value[k],\n            key,\n            styledSystemProps,\n            theme,\n            currentBreakpoint\n          });\n\n          if (!responsiveStyles[k]) {\n            responsiveStyles[k] = [];\n          }\n\n          responsiveStyles[k].push(newStyle);\n        }\n      }\n    } else {\n      const value = rawValue;\n      const newStyle = getRNKeyAndStyleValue({\n        config,\n        value,\n        key,\n        styledSystemProps,\n        theme,\n        currentBreakpoint\n      });\n      styleFromProps = { ...styleFromProps,\n        ...newStyle\n      };\n    }\n  }\n\n  if (responsiveStyles) {\n    const query = {\n      query: []\n    };\n    orderedBreakPoints.forEach(o => {\n      const key = o[0];\n\n      if (key === 'base') {\n        if (responsiveStyles) query.initial = responsiveStyles.base;\n      } else {\n        if (responsiveStyles) if (key in responsiveStyles) {\n          var _query$query;\n\n          query === null || query === void 0 ? void 0 : (_query$query = query.query) === null || _query$query === void 0 ? void 0 : _query$query.push({\n            minWidth: o[1],\n            style: responsiveStyles[key]\n          });\n        }\n      }\n    });\n    const {\n      dataSet: newDataSet,\n      styles\n    } = getResponsiveStyles(query);\n    dataSet = { ...dataSet,\n      ...newDataSet\n    };\n    styleFromProps = { ...styleFromProps,\n      ...StyleSheet.flatten(styles)\n    };\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style ', debug + ' :: ', {\n      styleFromProps,\n      style,\n      styledSystemProps\n    });\n  }\n\n  return {\n    styleSheet: StyleSheet.create({\n      box: styleFromProps\n    }),\n    dataSet\n  };\n};\n//# sourceMappingURL=styled-system.js.map"]},"metadata":{},"sourceType":"module"}