{"ast":null,"code":"import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { AlertDialogContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _s = $RefreshSig$();\n\nfunction _extends1() {\n  _extends1 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends1.apply(this, arguments);\n}\n\nvar AlertDialogContent = function AlertDialogContent(props, ref) {\n  _s();\n\n  var newProps = _extends({}, usePropsResolution('AlertDialogContent', props));\n\n  var ref1 = React.useContext(AlertDialogContext),\n      contentSize = ref1.contentSize,\n      initialFocusRef = ref1.initialFocusRef,\n      finalFocusRef = ref1.finalFocusRef,\n      handleClose = ref1.handleClose;\n  React.useEffect(function () {\n    var finalRefVal = finalFocusRef ? finalFocusRef.current : null;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return function () {\n      if (finalRefVal) {\n        finalRefVal.focus();\n      }\n    };\n  }, [initialFocusRef, finalFocusRef]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends1({}, contentSize, newProps, {\n    ref: ref,\n    onAccessibilityEscape: handleClose,\n    \"aria-modal\": \"true\",\n    accessibilityRole: \"alert\",\n    accessibilityViewIsModal: true\n  }));\n};\n\n_s(AlertDialogContent, \"f3ylAOZKvp7YvDffvhTECxneqXk=\", false, function () {\n  return [usePropsResolution, useHasResponsiveProps];\n});\n\n_c = AlertDialogContent;\nexport default _c2 = memo(_c1 = forwardRef(AlertDialogContent));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"AlertDialogContent\");\n$RefreshReg$(_c1, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\composites\\AlertDialog\\AlertDialogContent.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","Box","usePropsResolution","AlertDialogContext","useHasResponsiveProps","AlertDialogContent","props","ref","newProps","contentSize","initialFocusRef","finalFocusRef","handleClose","useContext","useEffect","finalRefVal","current","focus","createElement","onAccessibilityEscape","accessibilityRole","accessibilityViewIsModal"],"mappings":"AAEA,OAAOa,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;;;;;;;;;;;;;;;;;;;;;SANSnB,S,GAAW;AAAEA,EAAAA,SAAQ,GAAGC,MAAM,CAACC,MAAPD,IAAiB,UAAUE,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAPR,CAAiBS,cAAjBT,CAAgCU,IAAhCV,CAAqCM,MAArCN,EAA6CO,GAA7CP,CAAJ,EAAuD;AAAEE,UAAAA,MAAM,CAACK,GAAD,CAANL,GAAcI,MAAM,CAACC,GAAD,CAApBL;AAA4B;AAAE;AAAE;;AAAC,WAAOA,MAAP;AAAgB,GAA5PH;;AAA8P,SAAOA,SAAQ,CAACY,KAATZ,CAAe,IAAfA,EAAqBK,SAArBL,CAAP;AAAyC;;AAQ7T,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,GAAR,EAAgB;;;AACzC,MAAWC,QAAQ,GAAA,QAAA,CAAA,EAAA,EACfN,kBAAkB,CAAC,oBAAD,EAAuBI,KAAvB,CADH,CAAnB;;AAEA,MAKIR,IAAoC,GAApCA,KAAK,CAACe,UAANf,CAAiBK,kBAAjBL,CALJ;AAAA,MACEW,WAAW,GAITX,IAAoC,CAJtCW,WADF;AAAA,MAEEC,eAAe,GAGbZ,IAAoC,CAHtCY,eAFF;AAAA,MAGEC,aAAa,GAEXb,IAAoC,CAFtCa,aAHF;AAAA,MAIEC,WAAW,GACTd,IAAoC,CADtCc,WAJF;AAMAd,EAAAA,KAAK,CAACgB,SAANhB,CAAgB,YAAM;AACpB,QAAIiB,WAAW,GAAGJ,aAAa,GAAGA,aAAa,CAACK,OAAjB,GAA2B,IAA1D;;AAEA,QAAIN,eAAe,IAAIA,eAAe,CAACM,OAAvC,EAAgD;AAE9CN,MAAAA,eAAe,CAACM,OAAhBN,CAAwBO,KAAxBP;AACD;;AAED,WAAO,YAAM;AACX,UAAIK,WAAJ,EAAiB;AAEfA,QAAAA,WAAW,CAACE,KAAZF;AACD;AACF,KALD;AAMD,GAdDjB,EAcG,CAACY,eAAD,EAAkBC,aAAlB,CAdHb;;AAgBA,MAAIM,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,SAAoBR,KAAK,CAACoB,aAANpB,CAAoBG,GAApBH,EAAyBb,SAAQ,CAAC,EAAD,EAAKwB,WAAL,EAAkBD,QAAlB,EAA4B;AAC/ED,IAAAA,GAAG,EAAEA,GAD0E;AAE/EY,IAAAA,qBAAqB,EAAEP,WAFwD;AAI/E,kBAAc,MAJiE;AAM/EQ,IAAAA,iBAAiB,EAAE,OAN4D;AAO/EC,IAAAA,wBAAwB,EAAE;AAPqD,GAA5B,CAAjCvB,CAApB;AASD,CAtCD;;GAAMO,kB,EAAkB,8B,EAAA,K,EAAA,YAAA;UAElBH,kB,EAuBAE,qB;;;KAzBAC,kB;AAwCN,eAA4BN,GAAAA,GAAAA,IAAI,CAAeC,GAAAA,GAAAA,UAAU,CAACK,kBAAD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { AlertDialogContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertDialogContent = (props, ref) => {\n  const { ...newProps\n  } = usePropsResolution('AlertDialogContent', props);\n  const {\n    contentSize,\n    initialFocusRef,\n    finalFocusRef,\n    handleClose\n  } = React.useContext(AlertDialogContext);\n  React.useEffect(() => {\n    let finalRefVal = finalFocusRef ? finalFocusRef.current : null;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      //@ts-ignore\n      initialFocusRef.current.focus();\n    }\n\n    return () => {\n      if (finalRefVal) {\n        //@ts-ignore\n        finalRefVal.focus();\n      }\n    };\n  }, [initialFocusRef, finalFocusRef]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, contentSize, newProps, {\n    ref: ref,\n    onAccessibilityEscape: handleClose //@ts-ignore - web only\n    ,\n    \"aria-modal\": \"true\" //@ts-ignore - web only\n    ,\n    accessibilityRole: \"alert\",\n    accessibilityViewIsModal: true\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(AlertDialogContent));\n//# sourceMappingURL=AlertDialogContent.js.map"]},"metadata":{},"sourceType":"module"}