{"ast":null,"code":"import useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { getClosestBreakpoint, hasValidBreakpointFormat, findLastValidBreakpoint } from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\n\nvar _s = $RefreshSig$();\n\nexport function useBreakpointValue(values) {\n  _s();\n\n  var _useWindowDimensions;\n\n  var windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  var theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    var currentBreakpoint = getClosestBreakpoint(theme.breakpoints, windowWidth);\n    return findLastValidBreakpoint(values, theme.breakpoints, currentBreakpoint);\n  } else {\n    return values;\n  }\n}\n\n_s(useBreakpointValue, \"RBaeiZNWQpZdtGaPRzSi03Cm9Cc=\", false, function () {\n  return [useWindowDimensions, useTheme];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useBreakpointValue.js"],"names":["getClosestBreakpoint","hasValidBreakpointFormat","findLastValidBreakpoint","useTheme","useBreakpointValue","values","_useWindowDimensions","windowWidth","useWindowDimensions","width","theme","breakpoints","currentBreakpoint"],"mappings":";AACA,SAASA,oBAAT,EAA+BC,wBAA/B,EAAyDC,uBAAzD,QAAwF,gBAAxF;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;;AACA,OAAM,SAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;;;AACzC,MAAIC,oBAAJ;;AAEA,MAAIC,WAAW,GAAA,CAAID,oBAAoB,GAAGE,mBAAmB,EAA9C,MAAsD,IAAtD,IAA8DF,oBAAoB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,oBAAoB,CAACG,KAA7I;AACA,MAAMC,KAAK,GAAGP,QAAQ,EAAtB;;AAEA,MAAIF,wBAAwB,CAACI,MAAD,EAASK,KAAK,CAACC,WAAf,CAA5B,EAAyD;AACvD,QAAIC,iBAAiB,GAAGZ,oBAAoB,CAACU,KAAK,CAACC,WAAP,EAAoBJ,WAApB,CAA5C;AACA,WAAOL,uBAAuB,CAACG,MAAD,EAASK,KAAK,CAACC,WAAf,EAA4BC,iBAA5B,CAA9B;AACD,GAHD,MAGO;AACL,WAAOP,MAAP;AACD;AAEH;;GAbgBD,kB,EAAkB,8B,EAAA,K,EAAA,YAAA;UAGUI,mB,EAC5BL,Q","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport { getClosestBreakpoint, hasValidBreakpointFormat, findLastValidBreakpoint } from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\nexport function useBreakpointValue(values) {\n  var _useWindowDimensions;\n\n  let windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(theme.breakpoints, windowWidth);\n    return findLastValidBreakpoint(values, theme.breakpoints, currentBreakpoint);\n  } else {\n    return values;\n  }\n}\n//# sourceMappingURL=useBreakpointValue.js.map"]},"metadata":{},"sourceType":"module"}