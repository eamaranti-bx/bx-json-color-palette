{"ast":null,"code":"import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { VStack } from '../../primitives/Stack';\nimport Skeleton from './Skeleton';\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar SkeletonText = function SkeletonText(props, ref) {\n  _s();\n\n  var _ref = usePropsResolution('SkeletonText', props),\n      children = _ref.children,\n      startColor = _ref.startColor,\n      endColor = _ref.endColor,\n      lines = _ref.lines,\n      isLoaded = _ref.isLoaded,\n      _line = _ref._line,\n      resolvedProps = _objectWithoutProperties(_ref, [\"children\", \"startColor\", \"endColor\", \"lines\", \"isLoaded\", \"_line\"]);\n\n  var computedChildren = [];\n\n  for (var i = 0; i < lines; i++) {\n    if (i === lines - 1 && lines !== 1) {\n      computedChildren.push(React.createElement(Skeleton, _extends({\n        key: i,\n        endColor: endColor,\n        startColor: startColor,\n        w: \"75%\"\n      }, _line)));\n    } else computedChildren.push(React.createElement(Skeleton, _extends({\n      key: i,\n      endColor: endColor,\n      startColor: startColor\n    }, _line)));\n  }\n\n  return isLoaded ? children : React.createElement(VStack, _extends({}, resolvedProps, {\n    ref: ref\n  }), computedChildren);\n};\n\n_s(SkeletonText, \"76PV3yNPNgmcUlu0PE7Pc90A7yc=\", false, function () {\n  return [usePropsResolution];\n});\n\n_c = SkeletonText;\nexport default _c2 = memo(_c1 = forwardRef(SkeletonText));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"SkeletonText\");\n$RefreshReg$(_c1, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\composites\\Skeleton\\SkeletonText.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","usePropsResolution","VStack","Skeleton","SkeletonText","props","ref","children","startColor","endColor","lines","isLoaded","_line","resolvedProps","computedChildren","push","createElement","w"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { VStack } from '../../primitives/Stack';\nimport Skeleton from './Skeleton';\n\nconst SkeletonText = (props, ref) => {\n  // const { children, ...props } = allProps;\n  const {\n    children,\n    startColor,\n    endColor,\n    lines,\n    isLoaded,\n    _line,\n    ...resolvedProps\n  } = usePropsResolution('SkeletonText', props);\n  const computedChildren = []; //generating an array of skeleton components (same length as noOfLines)\n\n  for (let i = 0; i < lines; i++) {\n    //check for last line (to change the width of last line)\n    if (i === lines - 1 && lines !== 1) {\n      computedChildren.push(\n      /*#__PURE__*/\n      //Using Skeleton component with required props\n      React.createElement(Skeleton, _extends({\n        key: i,\n        endColor: endColor,\n        startColor: startColor,\n        w: \"75%\"\n      }, _line)));\n    } else computedChildren.push( /*#__PURE__*/React.createElement(Skeleton, _extends({\n      key: i,\n      endColor: endColor,\n      startColor: startColor\n    }, _line)));\n  }\n\n  return isLoaded ? children : /*#__PURE__*/React.createElement(VStack, _extends({}, resolvedProps, {\n    ref: ref\n  }), computedChildren);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(SkeletonText));\n//# sourceMappingURL=SkeletonText.js.map"]},"metadata":{},"sourceType":"module"}