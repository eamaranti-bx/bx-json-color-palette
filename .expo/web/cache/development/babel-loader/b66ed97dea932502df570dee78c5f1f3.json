{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { mode } from '../tools';\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport var Modal = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport var ModalContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport var ModalCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport var ModalHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport var ModalBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport var ModalFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport var ModalOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\theme\\components\\modal.js"],"names":["mode","sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","Modal","baseStyle","height","justifyContent","alignItems","defaultProps","size","closeOnOverlayClick","ModalContent","props","bg","_text","color","shadow","rounded","maxHeight","concat","Dimensions","get","overflow","ModalCloseButton","position","right","top","zIndex","colorScheme","p","_icon","ModalHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","ModalBody","pt","ModalFooter","flexDirection","flexWrap","ModalOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport const Modal = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport const ModalContent = {\n  baseStyle: props => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport const ModalCloseButton = {\n  baseStyle: props => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport const ModalHeader = {\n  baseStyle: props => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport const ModalBody = {\n  baseStyle: props => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport const ModalFooter = {\n  baseStyle: props => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport const ModalOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n//# sourceMappingURL=modal.js.map"]},"metadata":{},"sourceType":"module"}