{"ast":null,"code":"import { extractInObject } from './../theme/tools/';\nimport isEmpty from 'lodash.isempty';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nexport var filterShadowProps = function filterShadowProps(props, ignoredProps, OS) {\n  var _ignoredProps$style;\n\n  if (OS !== 'web') {\n    return _objectSpread({}, ignoredProps, props);\n  }\n\n  var style = (_ignoredProps$style = ignoredProps.style) !== null && _ignoredProps$style !== void 0 ? _ignoredProps$style : {};\n\n  var ref = _slicedToArray(extractInObject(props, ['shadowColor', 'shadowOffset', 'shadowOpacity', 'shadowRadius']), 2),\n      shadowProps = ref[0],\n      remainingProps = ref[1];\n\n  if (!isEmpty(shadowProps)) {\n    style = _objectSpread({}, style, shadowProps);\n  }\n\n  return _objectSpread({}, remainingProps, ignoredProps, {\n    style: style\n  });\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\utils\\filterShadowProps.js"],"names":["extractInObject","isEmpty","filterShadowProps","props","ignoredProps","OS","_ignoredProps$style","style","shadowProps","remainingProps"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,YAAR,EAAsBC,EAAtB,EAA6B;AAC5D,MAAIC,mBAAJ;;AAEA,MAAID,EAAE,KAAK,KAAX,EAAkB;AAChB,WAAM,aAAA,CAAA,EAAA,EAAMD,YAAN,EACDD,KADC,CAAN;AAGD;;AAED,MAAII,KAAK,GAAA,CAAID,mBAAmB,GAAGF,YAAY,CAACG,KAAvC,MAAkD,IAAlD,IAA0DD,mBAAmB,KAAK,KAAK,CAAvF,GAA2FA,mBAA3F,GAAiH,EAA1H;;AACA,MAAoCN,GAAwF,GAAA,cAAA,CAAxFA,eAAe,CAACG,KAAD,EAAQ,CAAC,aAAD,EAAgB,cAAhB,EAAgC,eAAhC,EAAiD,cAAjD,CAAR,CAAyE,EAAD,CAAC,CAA5H;AAAA,MAAKK,WAAW,GAAoBR,GAAwF,CAAA,CAAA,CAA5H;AAAA,MAAkBS,cAAc,GAAIT,GAAwF,CAAA,CAAA,CAA5H;;AAEA,MAAE,CAAGC,OAAO,CAACO,WAAD,CAAZ,EAA2B;AACzBD,IAAAA,KAAK,GAAA,aAAA,CAAA,EAAA,EAAQA,KAAR,EACAC,WADA,CAALD;AAGD;;AAED,SAAM,aAAA,CAAA,EAAA,EAAME,cAAN,EACDL,YADC,EACW;AACfG,IAAAA,KAAK,EAALA;AADe,GADX,CAAN;AAID,CAtBM","sourcesContent":["import { extractInObject } from './../theme/tools/';\nimport isEmpty from 'lodash.isempty';\nexport const filterShadowProps = (props, ignoredProps, OS) => {\n  var _ignoredProps$style;\n\n  if (OS !== 'web') {\n    return { ...ignoredProps,\n      ...props\n    };\n  }\n\n  let style = (_ignoredProps$style = ignoredProps.style) !== null && _ignoredProps$style !== void 0 ? _ignoredProps$style : {};\n  let [shadowProps, remainingProps] = extractInObject(props, ['shadowColor', 'shadowOffset', 'shadowOpacity', 'shadowRadius']);\n\n  if (!isEmpty(shadowProps)) {\n    style = { ...style,\n      ...shadowProps\n    };\n  }\n\n  return { ...remainingProps,\n    ...ignoredProps,\n    style\n  };\n};\n//# sourceMappingURL=filterShadowProps.js.map"]},"metadata":{},"sourceType":"module"}