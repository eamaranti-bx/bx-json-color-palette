{"ast":null,"code":"import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nvar _s = $RefreshSig$();\n\nexport function useSafeArea(props) {\n  _s();\n\n  var insets = useSafeAreaInsets();\n  var sizes = useTheme().sizes;\n  var ref = getSortedProps(props),\n      safeAreaProps = ref.safeAreaProps,\n      paddingProps = ref.paddingProps,\n      sansPaddingProps = ref.sansPaddingProps;\n\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n\n  var calcualtedPaddingProps = calculatePaddingProps(safeAreaProps, paddingProps, insets, sizes);\n  return _objectSpread({}, sansPaddingProps, paddingProps, calcualtedPaddingProps);\n}\n\n_s(useSafeArea, \"m+RQxqYSeOtVT2PSpbHJbB0PVcg=\", false, function () {\n  return [useSafeAreaInsets, useTheme];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useSafeArea\\index.js"],"names":["useSafeAreaInsets","getSortedProps","calculatePaddingProps","useTheme","useSafeArea","props","insets","sizes","safeAreaProps","paddingProps","sansPaddingProps","Object","keys","length","calcualtedPaddingProps"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,SAAtD;AACA,SAASC,QAAT,QAAyB,eAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAA6B;;;AACjC,MAAMC,MAAM,GAAGN,iBAAiB,EAAhC;AACA,MAAMO,KAAK,GAAGJ,QAAQ,GAAGI,KAAzB;AACA,MAIIN,GAAqB,GAArBA,cAAc,CAACI,KAAD,CAJlB;AAAA,MACEG,aAAa,GAGXP,GAAqB,CAHvBO,aADF;AAAA,MAEEC,YAAY,GAEVR,GAAqB,CAFvBQ,YAFF;AAAA,MAGEC,gBAAgB,GACdT,GAAqB,CADvBS,gBAHF;;AAMA,MAAE,CAAGC,MAAM,CAACC,IAAPD,CAAYH,aAAZG,EAA2BE,MAAhC,EAAwC;AACtC,WAAOR,KAAP;AACD;;AAED,MAAIS,sBAAsB,GAAGZ,qBAAqB,CAACM,aAAD,EAAgBC,YAAhB,EAA8BH,MAA9B,EAAsCC,KAAtC,CAAlD;AACA,SAAM,aAAA,CAAA,EAAA,EAAMG,gBAAN,EACDD,YADC,EAEDK,sBAFC,CAAN;AAKF;;GAnBgBV,W,EAAW,8B,EAAA,K,EAAA,YAAA;UACVJ,iB,EACDG,Q","sourcesContent":["import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\nexport function useSafeArea(props) {\n  const insets = useSafeAreaInsets();\n  const sizes = useTheme().sizes;\n  const {\n    safeAreaProps,\n    paddingProps,\n    sansPaddingProps\n  } = getSortedProps(props);\n\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n\n  let calcualtedPaddingProps = calculatePaddingProps(safeAreaProps, paddingProps, insets, sizes);\n  return { ...sansPaddingProps,\n    ...paddingProps,\n    ...calcualtedPaddingProps\n  };\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}