{"ast":null,"code":"import { mode } from '../tools';\nexport var Skeleton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      speed: 1,\n      h: '10',\n      w: '100%'\n    };\n  }\n};\nexport var SkeletonText = {\n  baseStyle: function baseStyle(props) {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      w: '100%',\n      speed: 1,\n      _line: {\n        h: 3,\n        rounded: 'full'\n      }\n    };\n  },\n  defaultProps: {\n    lines: 3,\n    space: 3\n  }\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\theme\\components\\skeleton.js"],"names":["mode","Skeleton","baseStyle","props","startColor","endColor","fadeDuration","speed","h","w","SkeletonText","_line","rounded","defaultProps","lines","space"],"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG;AACtBC,EAAAA,SAAS,EAAEC,mBAAAA,KAAAA,EAAS;AAClB,WAAO;AACLC,MAAAA,UAAU,EAAEJ,IAAI,CAAC,WAAD,EAAc,WAAd,CAAJA,CAA+BG,KAA/BH,CADP;AAELK,MAAAA,QAAQ,EAAE,aAFL;AAGLC,MAAAA,YAAY,EAAE,GAHT;AAILC,MAAAA,KAAK,EAAE,CAJF;AAKLC,MAAAA,CAAC,EAAE,IALE;AAMLC,MAAAA,CAAC,EAAE;AANE,KAAP;AAQD;AAVqB,CAAjB;AAaP,OAAO,IAAMC,YAAY,GAAG;AAC1BR,EAAAA,SAAS,EAAEC,mBAAAA,KAAAA,EAAS;AAClB,WAAO;AACLC,MAAAA,UAAU,EAAEJ,IAAI,CAAC,WAAD,EAAc,WAAd,CAAJA,CAA+BG,KAA/BH,CADP;AAELK,MAAAA,QAAQ,EAAE,aAFL;AAGLC,MAAAA,YAAY,EAAE,GAHT;AAILG,MAAAA,CAAC,EAAE,MAJE;AAKLF,MAAAA,KAAK,EAAE,CALF;AAMLI,MAAAA,KAAK,EAAE;AACLH,QAAAA,CAAC,EAAE,CADE;AAELI,QAAAA,OAAO,EAAE;AAFJ;AANF,KAAP;AAWD,GAbyB;AAc1BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,CADK;AAEZC,IAAAA,KAAK,EAAE;AAFK;AAdY,CAArB","sourcesContent":["import { mode } from '../tools'; // Skeleton\n\nexport const Skeleton = {\n  baseStyle: props => {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      speed: 1.0,\n      h: '10',\n      w: '100%'\n    };\n  }\n}; // SkeletonText\n\nexport const SkeletonText = {\n  baseStyle: props => {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      w: '100%',\n      speed: 1.0,\n      _line: {\n        h: 3,\n        rounded: 'full'\n      }\n    };\n  },\n  defaultProps: {\n    lines: 3,\n    space: 3\n  }\n};\n//# sourceMappingURL=skeleton.js.map"]},"metadata":{},"sourceType":"module"}