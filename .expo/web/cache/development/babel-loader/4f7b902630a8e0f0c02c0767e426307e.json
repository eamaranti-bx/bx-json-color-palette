{"ast":null,"code":"import { useNativeBaseConfig } from './../core/NativeBaseContext';\n\nvar _s = $RefreshSig$();\n\nexport function useTheme() {\n  _s();\n\n  var theme = useNativeBaseConfig('useTheme').theme;\n\n  if (!theme) {\n    throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');\n  }\n\n  return theme;\n}\n\n_s(useTheme, \"H8aAMdu2THW5RQm5/ryGB+EjUGE=\", false, function () {\n  return [useNativeBaseConfig];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useTheme.js"],"names":["useNativeBaseConfig","useTheme","theme","Error"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,6BAApC;;;;AACA,OAAM,SAAUC,QAAV,GAAqB;;;AACzB,MAAMC,KAAK,GAAGF,mBAAmB,CAAC,UAAD,CAAnBA,CAAgCE,KAA9C;;AAEA,MAAE,CAAGA,KAAL,EAAY;AACV,UAAMC,KAAK,CAAC,+FAAD,CAAX;AACD;;AAED,SAAOD,KAAP;AAEF;;GATgBD,Q,EAAQ,8B,EAAA,K,EAAA,YAAA;UACRD,mB","sourcesContent":["import { useNativeBaseConfig } from './../core/NativeBaseContext';\nexport function useTheme() {\n  const theme = useNativeBaseConfig('useTheme').theme;\n\n  if (!theme) {\n    throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');\n  }\n\n  return theme;\n}\n//# sourceMappingURL=useTheme.js.map"]},"metadata":{},"sourceType":"module"}