{"ast":null,"code":"import { mode } from './../tools';\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    bg: mode(\"coolGray.600\", \"warmGray.200\")(props),\n    p: '2',\n    rounded: 'sm',\n    shadow: 1,\n    _title: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 700\n    },\n    _description: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 400\n    },\n    _closeIcon: {\n      size: 4\n    }\n  };\n};\n\nexport var Toast = {\n  baseStyle: baseStyle,\n  defaultProps: {}\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\theme\\components\\toast.js"],"names":["mode","baseStyle","props","bg","p","rounded","shadow","_title","color","fontWeight","_description","_closeIcon","size","Toast","defaultProps"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;;AAEA,IAAMC,SAAS,GAAGC,SAAZD,SAAYC,CAAAA,KAAAA,EAAS;AACzB,SAAO;AACLC,IAAAA,EAAE,EAAEH,IAAI,CAAC,cAAD,EAAiB,cAAjB,CAAJA,CAAqCE,KAArCF,CADC;AAELI,IAAAA,CAAC,EAAE,GAFE;AAGLC,IAAAA,OAAO,EAAE,IAHJ;AAILC,IAAAA,MAAM,EAAE,CAJH;AAKLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAER,IAAI,CAAC,cAAD,EAAiB,cAAjB,CAAJA,CAAqCE,KAArCF,CADD;AAENS,MAAAA,UAAU,EAAE;AAFN,KALH;AASLC,IAAAA,YAAY,EAAE;AACZF,MAAAA,KAAK,EAAER,IAAI,CAAC,cAAD,EAAiB,cAAjB,CAAJA,CAAqCE,KAArCF,CADK;AAEZS,MAAAA,UAAU,EAAE;AAFA,KATT;AAaLE,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI;AAbP,GAAP;AAiBD,CAlBD;;AAoBA,OAAO,IAAMC,KAAK,GAAG;AACnBZ,EAAAA,SAAS,EAATA,SADmB;AAEnBa,EAAAA,YAAY,EAAE;AAFK,CAAd","sourcesContent":["import { mode } from './../tools';\n\nconst baseStyle = props => {\n  return {\n    bg: mode(\"coolGray.600\", \"warmGray.200\")(props),\n    p: '2',\n    rounded: 'sm',\n    shadow: 1,\n    _title: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 700\n    },\n    _description: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 400\n    },\n    _closeIcon: {\n      size: 4\n    }\n  };\n};\n\nexport const Toast = {\n  baseStyle,\n  defaultProps: {}\n};\n//# sourceMappingURL=toast.js.map"]},"metadata":{},"sourceType":"module"}