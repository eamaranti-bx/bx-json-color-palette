{"ast":null,"code":"import { usePropsResolutionWithComponentTheme } from './usePropsResolution';\n\nvar _s = $RefreshSig$();\n\nexport function usePropsWithComponentTheme(localTheme, propsReceived) {\n  _s();\n\n  return usePropsResolutionWithComponentTheme(localTheme, propsReceived);\n}\n\n_s(usePropsWithComponentTheme, \"hl2OAYuAe3NFNM7I87ulSw/Vfwk=\", false, function () {\n  return [usePropsResolutionWithComponentTheme];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useThemeProps\\usePropsWithComponentTheme.js"],"names":["usePropsResolutionWithComponentTheme","usePropsWithComponentTheme","localTheme","propsReceived"],"mappings":"AAAA,SAASA,oCAAT,QAAqD,sBAArD;;;;AACA,OAAM,SAAUC,0BAAV,CAAqCC,UAArC,EAAiDC,aAAjD,EAAgE;;;AACpE,SAAOH,oCAAoC,CAACE,UAAD,EAAaC,aAAb,CAA3C;AAEF;;GAHgBF,0B,EAA0B,8B,EAAA,K,EAAA,YAAA;UACjCD,oC","sourcesContent":["import { usePropsResolutionWithComponentTheme } from './usePropsResolution';\nexport function usePropsWithComponentTheme(localTheme, propsReceived) {\n  return usePropsResolutionWithComponentTheme(localTheme, propsReceived);\n}\n//# sourceMappingURL=usePropsWithComponentTheme.js.map"]},"metadata":{},"sourceType":"module"}