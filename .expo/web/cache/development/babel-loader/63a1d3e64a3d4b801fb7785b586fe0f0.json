{"ast":null,"code":"import { useKeyboardDismissable, usePropsResolution, useToken } from '../../../hooks';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport var PopoverContent = _s(React.forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var _ref, _ref2, _props$bgColor;\n\n  var ref1 = React.useContext(PopoverContext),\n      onClose = ref1.onClose,\n      initialFocusRef = ref1.initialFocusRef,\n      finalFocusRef = ref1.finalFocusRef,\n      popoverContentId = ref1.popoverContentId,\n      headerMounted = ref1.headerMounted,\n      bodyMounted = ref1.bodyMounted,\n      bodyId = ref1.bodyId,\n      headerId = ref1.headerId;\n  var resolvedProps = usePropsResolution('PopoverContent', props);\n  var arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  var color = useToken('colors', arrowDefaultColor);\n  React.useEffect(function () {\n    var finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return function () {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n  useKeyboardDismissable({\n    enabled: true,\n    callback: onClose\n  });\n  var arrowElement = null;\n  var restChildren = [];\n  React.Children.forEach(props.children, function (child) {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = React.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n  var accessibilityProps = Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {};\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, props, {\n    ref: ref\n  }), arrowElement, restChildren);\n}, \"jwdFkWVn4I6iw915PHS17gJ83VQ=\", false, function () {\n  return [usePropsResolution, useToken, useKeyboardDismissable, useHasResponsiveProps];\n})), \"jwdFkWVn4I6iw915PHS17gJ83VQ=\", false, function () {\n  return [usePropsResolution, useToken, useKeyboardDismissable, useHasResponsiveProps];\n});\n_c1 = PopoverContent;\nPopoverContent.displayName = 'PopoverContent';\n\nvar _c, _c1;\n\n$RefreshReg$(_c, \"PopoverContent$React.forwardRef\");\n$RefreshReg$(_c1, \"PopoverContent\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\composites\\Popover\\PopoverContent.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useKeyboardDismissable","usePropsResolution","useToken","React","Popper","PopoverContext","useHasResponsiveProps","PopoverContent","forwardRef","props","ref","_ref","_ref2","_props$bgColor","onClose","initialFocusRef","finalFocusRef","popoverContentId","headerMounted","bodyMounted","bodyId","headerId","useContext","resolvedProps","arrowDefaultColor","bgColor","bg","backgroundColor","color","useEffect","finalFocusRefCurrentVal","current","focus","enabled","callback","arrowElement","restChildren","Children","forEach","children","child","type","displayName","_child$props$color","cloneElement","push","accessibilityProps","Platform","OS","undefined","createElement","Content","nativeID"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useKeyboardDismissable, usePropsResolution, useToken } from '../../../hooks';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport const PopoverContent = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _ref, _ref2, _props$bgColor;\n\n  const {\n    onClose,\n    initialFocusRef,\n    finalFocusRef,\n    popoverContentId,\n    headerMounted,\n    bodyMounted,\n    bodyId,\n    headerId\n  } = React.useContext(PopoverContext);\n  const resolvedProps = usePropsResolution('PopoverContent', props);\n  const arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  const color = useToken('colors', arrowDefaultColor);\n  React.useEffect(() => {\n    const finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return () => {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n  useKeyboardDismissable({\n    enabled: true,\n    callback: onClose\n  });\n  let arrowElement = null;\n  const restChildren = [];\n  React.Children.forEach(props.children, child => {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = /*#__PURE__*/React.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n  const accessibilityProps = Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {}; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, props, {\n    ref: ref\n  }), arrowElement, restChildren);\n});\nPopoverContent.displayName = 'PopoverContent';\n//# sourceMappingURL=PopoverContent.js.map"]},"metadata":{},"sourceType":"module"}