{"ast":null,"code":"import React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\nvar _s = $RefreshSig$();\n\nexport var useBreakpointResolvedProps = function useBreakpointResolvedProps(props) {\n  _s();\n\n  var currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps').currentBreakpoint;\n  var theme = useTheme();\n  var newProps1 = React.useMemo(function () {\n    var newProps = {};\n\n    for (var key in props) {\n      var rawValue = props[key];\n      var value = resolveValueWithBreakpoint(rawValue, theme.breakpoints, currentBreakpoint, key);\n      newProps[key] = value;\n    }\n\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n  return newProps1;\n};\n\n_s(useBreakpointResolvedProps, \"ER9EjG4KgHcr6HuXShjmNe9oezo=\", false, function () {\n  return [useNativeBaseConfig, useTheme];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useBreakpointResolvedProps.js"],"names":["React","useNativeBaseConfig","resolveValueWithBreakpoint","useTheme","useBreakpointResolvedProps","props","currentBreakpoint","theme","newProps","useMemo","key","rawValue","value","breakpoints"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,0BAAT,QAA2C,uBAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;;AACA,OAAO,IAAMC,0BAA0B,GAAGC,SAA7BD,0BAA6BC,CAAAA,KAAAA,EAAS;;;AACjD,MAAMC,iBAAiB,GAAGL,mBAAmB,CAAC,4BAAD,CAAnBA,CAAkDK,iBAA5E;AACA,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,MAAMK,SAAQ,GAAGR,KAAK,CAACS,OAANT,CAAc,YAAM;AACnC,QAAIQ,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIE,GAAT,IAAgBL,KAAhB,EAAuB;AACrB,UAAMM,QAAQ,GAAGN,KAAK,CAACK,GAAD,CAAtB;AACA,UAAME,KAAK,GAAGV,0BAA0B,CAACS,QAAD,EAAWJ,KAAK,CAACM,WAAjB,EAA8BP,iBAA9B,EAAiDI,GAAjD,CAAxC;AACAF,MAAAA,QAAQ,CAACE,GAAD,CAARF,GAAgBI,KAAhBJ;AACD;;AAED,WAAOA,QAAP;AACD,GAVgBR,EAUd,CAACK,KAAD,EAAQC,iBAAR,EAA2BC,KAAK,CAACM,WAAjC,CAVcb,CAAjB;AAWA,SAAOQ,SAAP;AACD,CAfM;;GAAMJ,0B,EAA0B,8B,EAAA,K,EAAA,YAAA;UACXH,mB,EACZE,Q","sourcesContent":["import React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\nexport const useBreakpointResolvedProps = props => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps').currentBreakpoint;\n  const theme = useTheme();\n  const newProps = React.useMemo(() => {\n    let newProps = {};\n\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(rawValue, theme.breakpoints, currentBreakpoint, key);\n      newProps[key] = value;\n    }\n\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n  return newProps;\n};\n//# sourceMappingURL=useBreakpointResolvedProps.js.map"]},"metadata":{},"sourceType":"module"}