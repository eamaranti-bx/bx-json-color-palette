{"ast":null,"code":"import get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNativeBase } from './../useNativeBase';\nimport { omitUndefined, extractInObject } from './../../theme/tools/';\nimport { filterShadowProps } from './../../utils/filterShadowProps';\nimport { calculateProps } from './utils';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s1, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s1 = _i.next()).done); _n = true) {\n      _arr.push(_s1.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nvar _s = $RefreshSig$();\n\nvar filterAndCalculateProps = function filterAndCalculateProps(theme, colorModeProps, componentTheme, propsReceived, windowWidth) {\n  var ref = _slicedToArray(extractInObject(propsReceived, ['children', 'style', 'onPress', 'icon', 'onOpen', 'onClose']), 2),\n      ignoredProps = ref[0],\n      props = ref[1];\n\n  var newProps = calculateProps(theme, colorModeProps, componentTheme, props, windowWidth);\n  var mergedProps = filterShadowProps(newProps, ignoredProps, Platform.OS);\n  return omitUndefined(mergedProps);\n};\n\nexport function useThemeProps(component, propsReceived) {\n  _s();\n\n  var _useWindowDimensions;\n\n  var _ref = useNativeBase(),\n      theme = _ref.theme,\n      colorModeProps = _objectWithoutProperties(_ref, [\"theme\"]);\n\n  var componentTheme = get(theme, \"components.\".concat(component));\n  var windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  return filterAndCalculateProps(omit(theme, ['components']), colorModeProps, componentTheme, propsReceived, windowWidth);\n}\n\n_s(useThemeProps, \"Lq4FZGfE5y4B4o823Cv+7BTl4mU=\", false, function () {\n  return [useNativeBase, useWindowDimensions];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\hooks\\useThemeProps\\useProps.js"],"names":["get","omit","useNativeBase","omitUndefined","extractInObject","filterShadowProps","calculateProps","filterAndCalculateProps","theme","colorModeProps","componentTheme","propsReceived","windowWidth","ignoredProps","props","newProps","mergedProps","Platform","OS","useThemeProps","component","_useWindowDimensions","concat","useWindowDimensions","width"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,sBAA/C;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,cAAT,QAA+B,SAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,WAAvD,EAAuE;AAIrG,MAA4BR,GAA6F,GAAA,cAAA,CAA7FA,eAAe,CAACO,aAAD,EAAgB,CAAC,UAAD,EAAa,OAAb,EAAsB,SAAtB,EAAiC,MAAjC,EAAyC,QAAzC,EAAmD,SAAnD,CAAhB,CAA8E,EAAD,CAAC,CAAzH;AAAA,MAAKE,YAAY,GAAWT,GAA6F,CAAA,CAAA,CAAzH;AAAA,MAAmBU,KAAK,GAAIV,GAA6F,CAAA,CAAA,CAAzH;;AACA,MAAIW,QAAQ,GAAGT,cAAc,CAACE,KAAD,EAAQC,cAAR,EAAwBC,cAAxB,EAAwCI,KAAxC,EAA+CF,WAA/C,CAA7B;AACA,MAAII,WAAW,GAAGX,iBAAiB,CAACU,QAAD,EAAWF,YAAX,EAAyBI,QAAQ,CAACC,EAAlC,CAAnC;AACA,SAAOf,aAAa,CAACa,WAAD,CAApB;AACD,CARD;;AAUA,OAAM,SAAUG,aAAV,CAAwBC,SAAxB,EAAmCT,aAAnC,EAAkD;;;AACtD,MAAIU,oBAAJ;;AAEA,MAGInB,IAAe,GAAfA,aAAa,EAHjB;AAAA,MACEM,KAAK,GAEHN,IAAe,CAFjBM,KADF;AAAA,MAEKC,cAAc,GAAA,wBAAA,CACfP,IADe,EACA,CAFjBM,OAEiB,CADA,CAFnB;;AAKA,MAAME,cAAc,GAAGV,GAAG,CAACQ,KAAD,EAAQ,cAAcc,MAAd,CAAqBF,SAArB,CAAR,CAA1B;AAEA,MAAMR,WAAW,GAAA,CAAIS,oBAAoB,GAAGE,mBAAmB,EAA9C,MAAsD,IAAtD,IAA8DF,oBAAoB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,oBAAoB,CAACG,KAA/I;AAEA,SAAOjB,uBAAuB,CAACN,IAAI,CAACO,KAAD,EAAQ,CAAC,YAAD,CAAR,CAAL,EAA8BC,cAA9B,EAA8CC,cAA9C,EAA8DC,aAA9D,EAA6EC,WAA7E,CAA9B;AAEF;;GAdgBO,a,EAAa,8B,EAAA,K,EAAA,YAAA;UAMvBjB,a,EAIwCqB,mB","sourcesContent":["import get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport { useWindowDimensions, Platform } from 'react-native';\nimport { useNativeBase } from './../useNativeBase';\nimport { omitUndefined, extractInObject } from './../../theme/tools/';\nimport { filterShadowProps } from './../../utils/filterShadowProps';\nimport { calculateProps } from './utils';\n\nconst filterAndCalculateProps = (theme, colorModeProps, componentTheme, propsReceived, windowWidth) => {\n  // Extracting out children and style, as they do not contribute in props calculation\n  // This is done as these props are passed as it is later in the development\n  // Required as some of these will trigger cyclic computation which may lead to error\n  let [ignoredProps, props] = extractInObject(propsReceived, ['children', 'style', 'onPress', 'icon', 'onOpen', 'onClose']);\n  let newProps = calculateProps(theme, colorModeProps, componentTheme, props, windowWidth);\n  let mergedProps = filterShadowProps(newProps, ignoredProps, Platform.OS);\n  return omitUndefined(mergedProps);\n};\n\nexport function useThemeProps(component, propsReceived) {\n  var _useWindowDimensions;\n\n  const {\n    theme,\n    ...colorModeProps\n  } = useNativeBase(); // console.log('THEME = ', theme);\n\n  const componentTheme = get(theme, \"components.\".concat(component)); // console.log('COMPONENT THEME = ', componentTheme);\n\n  const windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width; // To pass the component theme props and component props seperately\n\n  return filterAndCalculateProps(omit(theme, ['components']), colorModeProps, componentTheme, propsReceived, windowWidth);\n}\n//# sourceMappingURL=useProps.js.map"]},"metadata":{},"sourceType":"module"}