{"ast":null,"code":"export function mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\nexport function composeEventHandlers(originalEventHandler, ourEventHandler) {\n  return function handleEvent(event) {\n    originalEventHandler === null || originalEventHandler === void 0 ? void 0 : originalEventHandler(event);\n    ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);\n  };\n}\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\utils\\mergeRefs.js"],"names":["mergeRefs","refs","value","forEach","ref","current","composeEventHandlers","originalEventHandler","ourEventHandler","handleEvent","event"],"mappings":"AAAA,OAAM,SAAUA,SAAV,CAAoBC,IAApB,EAA0B;AAC9B,SAAOC,UAAAA,KAAAA,EAAS;AACdD,IAAAA,IAAI,CAACE,OAALF,CAAaG,UAAAA,GAAAA,EAAO;AAClB,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACF,KAAD,CAAHE;AACD,OAFD,MAEO,IAAIA,GAAG,IAAI,IAAX,EAAiB;AACtBA,QAAAA,GAAG,CAACC,OAAJD,GAAcF,KAAdE;AACD;AACF,KANDH;AAOD,GARD;AASD;AACD,OAAM,SAAUK,oBAAV,CAA+BC,oBAA/B,EAAqDC,eAArD,EAAsE;AAC1E,SAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjCH,IAAAA,oBAAoB,KAAK,IAAzBA,IAAiCA,oBAAoB,KAAK,KAAK,CAA/DA,GAAmE,KAAK,CAAxEA,GAA4EA,oBAAoB,CAACG,KAAD,CAAhGH;AACAC,IAAAA,eAAe,KAAK,IAApBA,IAA4BA,eAAe,KAAK,KAAK,CAArDA,GAAyD,KAAK,CAA9DA,GAAkEA,eAAe,CAACE,KAAD,CAAjFF;AACD,GAHD;AAKF","sourcesContent":["export function mergeRefs(refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\nexport function composeEventHandlers(originalEventHandler, ourEventHandler) {\n  return function handleEvent(event) {\n    originalEventHandler === null || originalEventHandler === void 0 ? void 0 : originalEventHandler(event);\n    ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);\n  };\n}\n//# sourceMappingURL=mergeRefs.js.map"]},"metadata":{},"sourceType":"module"}