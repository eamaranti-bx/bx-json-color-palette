{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nvar baseStyle = {\n  width: 'auto',\n  height: 'auto',\n  display: 'flex',\n  flexDirection: 'row',\n  spacing: '2'\n};\nvar defaultProps = {\n  direction: 'row',\n  wrap: 'wrap'\n};\nexport var Breadcrumb = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps\n};\nexport var BreadcrumbText = {\n  baseStyle: _objectSpread({}, baseStyle, {\n    _current: {\n      fontWeight: 'bold'\n    }\n  }),\n  defaultProps: defaultProps\n};\nexport var BreadcrumbIcon = {\n  baseStyle: _objectSpread({}, baseStyle),\n  defaultProps: defaultProps\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\theme\\components\\breadcrumb.js"],"names":["baseStyle","width","height","display","flexDirection","spacing","defaultProps","direction","wrap","Breadcrumb","BreadcrumbText","_current","fontWeight","BreadcrumbIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE,MAFQ;AAGhBC,EAAAA,OAAO,EAAE,MAHO;AAIhBC,EAAAA,aAAa,EAAE,KAJC;AAKhBC,EAAAA,OAAO,EAAE;AALO,CAAlB;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAIA,OAAO,IAAMC,UAAU,GAAG;AACxBT,EAAAA,SAAS,EAATA,SADwB;AAExBM,EAAAA,YAAY,EAAZA;AAFwB,CAAnB;AAIP,OAAO,IAAMI,cAAc,GAAG;AAC5BV,EAAAA,SAAS,EAAA,aAAA,CAAA,EAAA,EAAOA,SAAP,EAAgB;AACvBW,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE;AADJ;AADa,GAAhB,CADmB;AAM5BN,EAAAA,YAAY,EAAZA;AAN4B,CAAvB;AAQP,OAAO,IAAMO,cAAc,GAAG;AAC5Bb,EAAAA,SAAS,EAAA,aAAA,CAAA,EAAA,EAAOA,SAAP,CADmB;AAG5BM,EAAAA,YAAY,EAAZA;AAH4B,CAAvB","sourcesContent":["const baseStyle = {\n  width: 'auto',\n  height: 'auto',\n  display: 'flex',\n  flexDirection: 'row',\n  spacing: '2'\n};\nconst defaultProps = {\n  direction: 'row',\n  wrap: 'wrap'\n};\nexport const Breadcrumb = {\n  baseStyle,\n  defaultProps\n};\nexport const BreadcrumbText = {\n  baseStyle: { ...baseStyle,\n    _current: {\n      fontWeight: 'bold'\n    }\n  },\n  defaultProps\n};\nexport const BreadcrumbIcon = {\n  baseStyle: { ...baseStyle\n  },\n  defaultProps\n};\n//# sourceMappingURL=breadcrumb.js.map"]},"metadata":{},"sourceType":"module"}