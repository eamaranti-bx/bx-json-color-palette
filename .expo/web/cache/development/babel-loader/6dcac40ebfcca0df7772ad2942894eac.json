{"ast":null,"code":"import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _s = $RefreshSig$();\n\nvar StyledText = makeStyledComponent(NativeText);\n_c = StyledText;\nvar TextAncestorContext = React.createContext(false);\n\nvar Text = function Text(_param, ref) {\n  var children = _param.children,\n      props = _objectWithoutProperties(_param, [\"children\"]);\n\n  _s();\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n\n  var _ref = usePropsResolution('Text', props, {}, {\n    resolveResponsively: ['noOfLines', 'numberOfLines'],\n    componentTheme: hasTextAncestor ? {} : undefined\n  }),\n      isTruncated = _ref.isTruncated,\n      noOfLines = _ref.noOfLines,\n      bold = _ref.bold,\n      italic = _ref.italic,\n      sub = _ref.sub,\n      highlight = _ref.highlight,\n      underline = _ref.underline,\n      strikeThrough = _ref.strikeThrough,\n      propFontFamily = _ref.fontFamily,\n      propFontWeight = _ref.fontWeight,\n      propFontStyle = _ref.fontStyle,\n      _hover = _ref._hover,\n      fontSize = _ref.fontSize,\n      numberOfLines = _ref.numberOfLines,\n      reslovedProps = _objectWithoutProperties(_ref, [\"isTruncated\", \"noOfLines\", \"bold\", \"italic\", \"sub\", \"highlight\", \"underline\", \"strikeThrough\", \"fontFamily\", \"fontWeight\", \"fontStyle\", \"_hover\", \"fontSize\", \"numberOfLines\"]);\n\n  var _ref1 = useRef(null);\n\n  var isHovered = useHover({}, _hover ? _ref1 : null).isHovered;\n  var fontFamily = propFontFamily;\n  var fontStyle = italic ? 'italic' : propFontStyle;\n  var fontWeight = bold ? 'bold' : propFontWeight;\n  var resolvedFontFamily = useResolvedFontFamily({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var propsToSpread = _objectSpread({}, reslovedProps, {\n    numberOfLines: numberOfLines || noOfLines ? numberOfLines || noOfLines : isTruncated ? 1 : undefined\n  }, resolvedFontFamily, {\n    bg: highlight ? 'warning.300' : reslovedProps.bg,\n    textDecorationLine: underline && strikeThrough ? 'underline line-through' : underline ? 'underline' : strikeThrough ? 'line-through' : reslovedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref1])\n  }, isHovered && _hover);\n\n  return hasTextAncestor ? React.createElement(StyledText, propsToSpread, children) : React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, React.createElement(StyledText, propsToSpread, children));\n};\n\n_s(Text, \"wV+7n4cjxoZtM7A3wa7pvEVY87I=\", false, function () {\n  return [usePropsResolution, useHover, useResolvedFontFamily, useHasResponsiveProps];\n});\n\n_c1 = Text;\nexport default _c3 = memo(_c2 = forwardRef(Text));\n\nvar _c, _c1, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledText\");\n$RefreshReg$(_c1, \"Text\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\projects\\json-color-palette-generator\\node_modules\\native-base\\lib\\module\\components\\primitives\\Text\\index.js"],"names":["React","memo","forwardRef","useRef","usePropsResolution","useHover","mergeRefs","makeStyledComponent","useResolvedFontFamily","useHasResponsiveProps","StyledText","NativeText","TextAncestorContext","createContext","Text","children","props","ref","hasTextAncestor","useContext","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","fontFamily","propFontFamily","fontWeight","propFontWeight","fontStyle","propFontStyle","_hover","fontSize","numberOfLines","reslovedProps","resolveResponsively","componentTheme","undefined","_ref","isHovered","resolvedFontFamily","propsToSpread","bg","textDecorationLine","createElement","Provider","value"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { Text as NativeText } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledText = makeStyledComponent(NativeText); // To have a RN compatible behaviour, we'll inherit parent text styles as base style\n\nconst TextAncestorContext = /*#__PURE__*/React.createContext(false);\n\nconst Text = ({\n  children,\n  ...props\n}, ref) => {\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize,\n    numberOfLines,\n    ...reslovedProps\n  } = usePropsResolution('Text', props, {}, {\n    resolveResponsively: ['noOfLines', 'numberOfLines'],\n    // We override the component base theme if text has an ancestor.\n    componentTheme: hasTextAncestor ? {} : undefined\n  });\n\n  const _ref = useRef(null); // TODO: might have to add this condition\n\n\n  const {\n    isHovered\n  } = useHover({}, _hover ? _ref : null); // const { isHovered } = useHover({}, _ref);\n\n  let fontFamily = propFontFamily;\n  const fontStyle = italic ? 'italic' : propFontStyle;\n  const fontWeight = bold ? 'bold' : propFontWeight;\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  } //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const propsToSpread = { ...reslovedProps,\n    numberOfLines: numberOfLines || noOfLines ? numberOfLines || noOfLines : isTruncated ? 1 : undefined,\n    ...resolvedFontFamily,\n    bg: highlight ? 'warning.300' : reslovedProps.bg,\n    textDecorationLine: underline && strikeThrough ? 'underline line-through' : underline ? 'underline' : strikeThrough ? 'line-through' : reslovedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref]),\n    ...(isHovered && _hover)\n  };\n  return hasTextAncestor ? /*#__PURE__*/React.createElement(StyledText, propsToSpread, children) : /*#__PURE__*/React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, /*#__PURE__*/React.createElement(StyledText, propsToSpread, children));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Text));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}